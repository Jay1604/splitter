@startuml

package splitter {
    package domain.services {
        class AusgleichService

    }

    package services {
        interface GruppenRepository
        class GruppenService
        GruppenService --> GruppenRepository
        GruppenService --> AusgleichService

    }

    package persistence {
        class Gruppe
        class Person
        interface SpringDataGruppenRepository
        interface SpringDataPersonRepository
        class GruppenRepositoryImpl
        GruppenRepositoryImpl --> SpringDataGruppenRepository
        GruppenRepositoryImpl --> SpringDataPersonRepository
        SpringDataGruppenRepository --> Gruppe
        SpringDataPersonRepository --> Person
        GruppenRepository <|-- GruppenRepositoryImpl
    }

    package domain.models {

        class Ueberweisung

        package Gruppe <<Frame>> {
            class Person
            class Ausgabe
            class Gruppe
            Gruppe --> Person
            Gruppe --> Ausgabe
            Gruppe <.. AusgleichService : Erzeugt aus Gruppe
            Gruppe <-- GruppenRepositoryImpl : Transformiert Domain Gruppe in DTO und umgekehrt

        }
        Ueberweisung <.. AusgleichService : Notwendige Ãœberweisungen
    }

    package web {
        class WebController <<controller>>
        WebController --> GruppenService
        package rest {
            class RestController <<controller>>
            class RestEntities <<objects>>
            RestEntities <-- RestController
            RestController --> GruppenService
        }
    }


}
@enduml